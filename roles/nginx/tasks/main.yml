---
- name: nginx repo
  copy: src=nginx.repo dest=/etc/yum.repos.d/ owner=root group=root
  register: nginxrepo

- name: refresh yum cache
  command: yum makecache
  when: nginxrepo.changed

- name: nginx installed
  yum: name=nginx state=installed

- name: signed certs
  synchronize: src=certs/ dest=/etc/pki/tls/certs/ copy_links=yes

- name: private keys
  copy: src=keys/{{ item }} dest=/etc/pki/tls/private/ owner=root group=root mode=0600
  with_items:
    - kibana.codeshelf.com.key
    - tsdb.codeshelf.com.key
    - grafana.codeshelf.com.key
    - dev.codeshelf.com.key
    - admin.codeshelf.com.key
    - tc.codeshelf.com.key
    - teamcity.codeshelf.com.key
    - dashboard.codeshelf.com.key
    - codeshelfcom.key

- name: dhparams file
  copy: src=dhparams.pem dest=/etc/pki/tls/dhparams.pem owner=root group=root mode=0600

- name: static sites
  synchronize: src=static dest=/var/www
  notify: dashboard directory permissions

- name: admin host list
  template: src=hosts.json.j2 dest=/var/www/static/admin/resources/hosts.json owner=root group=root mode=0644

- name: Got test site
  local_action: command /home/ansible/release/get_deployed.sh test
  sudo: False

- name: Got stage site
  local_action: command /home/ansible/release/get_deployed.sh stage
  sudo: False

- name: UX folders
  file: path=/var/www/{{ item }}/ state=directory
  with_items: groups['fep']

- name: UX folders
  file: path=/var/www/{{ item }}/ux/ state=directory
  with_items: groups['fep']

- name: UX versions
  copy: src=/home/ansible/release/CodeshelfUX/{{ item }}/buildweb.txt dest=/var/www/{{ item }}/
  with_items: groups['fep']
  register: ux

- name: UX HTML
  unarchive: src=/home/ansible/release/CodeshelfUX/{{ item.item }}/web_app.tgz dest=/var/www/{{ item.item }}/
  when: item.changed
  with_items: ux.results

- name: app browser config files
  template: src=websocket.addr.json.j2 dest=/var/www/{{ item }}/websocket.addr.json
  with_items: groups['fep']

- name: app browser config files
  template: src=websocket.addr.json.j2 dest=/var/www/{{ item }}/ux/websocket.addr.json
  with_items: groups['fep']

- name: nginx configuration
  template: src=nginx.conf.j2 dest=/etc/nginx/nginx.conf owner=root group=root mode=0644
  notify: reload nginx config

- name: nginx static password file
  copy: src=htpasswd dest=/etc/nginx/htpasswd owner=root group=root mode=0644 

- name: nginx service
  service: name=nginx state=started

- name: deploybot user
  user: name=deploybot generate_ssh_key=yes

- name: deploybot ssh key
  copy: src=id_deploybot dest=/home/deploybot/.ssh/id_rsa owner=deploybot group=deploybot mode=0600

- include: assemble_iptables.yml

